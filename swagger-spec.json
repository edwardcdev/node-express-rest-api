{"info":{"title":"Node Express API","version":"1.0.0","description":"RESTful API with Node.js and Express.js"},"host":"localhost:3001","basePath":"/","swagger":"2.0","paths":{"/admin/best-profession":{"get":{"summary":"Returns the profession that earned the most money.","description":"Returns the profession that earned the most money (sum of jobs paid) for any contactor that worked in the query time range.","parameters":[{"name":"profile_id","in":"header","description":"ID of profile (authenticated user)","required":true,"type":"integer","format":"int64"},{"name":"start","in":"query","description":"Start date","required":true,"type":"string","format":"yyyy-mm-dd"},{"name":"end","in":"query","description":"End date","required":true,"type":"string","format":"yyyy-mm-dd"}],"produces":["application/json"],"responses":{"200":{"description":"success"},"400":{"description":"Start and end date are required | Start and end date format must be yyyy-mm-dd"},"401":{"description":"profile_id header (authenticated user) is required"}}}},"/admin/best-clients":{"get":{"summary":"Returns the clients the paid the most for jobs in the query time period.","description":"Returns the clients the paid the most for jobs in the query time period. Limit query parameter should be applied, default limit is 2.","parameters":[{"name":"profile_id","in":"header","description":"ID of profile (authenticated user)","required":true,"type":"integer","format":"int64"},{"name":"start","in":"query","description":"Start date","required":true,"type":"string","format":"yyyy-mm-dd"},{"name":"end","in":"query","description":"End date","required":true,"type":"string","format":"yyyy-mm-dd"},{"name":"limit","in":"query","description":"Result limit","required":false,"type":"integer","format":"int64"}],"produces":["application/json"],"responses":{"200":{"description":"success"},"400":{"description":"Start and end date are required | Start and end date format must be yyyy-mm-dd | Limit must be an number"},"401":{"description":"profile_id header (authenticated user) is required"}}}},"/balances/deposit/{userId}":{"post":{"summary":"Deposits money into the balance of a client.","description":"Deposits money into the balance of a client, a client can't deposit more than 25% his total of jobs to pay. (at the deposit moment)","parameters":[{"name":"profile_id","in":"header","description":"ID of profile (authenticated user)","required":true,"type":"integer","format":"int64"},{"name":"userId","in":"path","description":"ID of profile/user that will get the deposit","required":true,"type":"integer","format":"int64"},{"in":"body","name":"DepositDetails","schema":{"type":"object","required":"depositValue","properties":{"depositValue":{"type":"number"}}}}],"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"success"},"400":{"description":"Deposit value is required | Deposit value is not valid | Client deposit limit reached"},"401":{"description":"profile_id header (authenticated user) is required"},"404":{"description":"User not found"},"412":{"description":"You must be a client to make a deposit"}}}},"/contracts/{id}":{"get":{"summary":"Return the contract.","description":"Return the contract only if it belongs to the profile calling.","parameters":[{"name":"id","in":"path","description":"ID of contract to return","required":true,"type":"integer","format":"int64"},{"name":"profile_id","in":"header","description":"ID of profile (authenticated user)","required":true,"type":"integer","format":"int64"}],"produces":["application/json"],"responses":{"200":{"description":"success"},"401":{"description":"profile_id header (authenticated user) is required"},"403":{"description":"profile_id header is not present on the contract as a client or contractor"},"404":{"description":"contract was not found on database"}}}},"/contracts":{"get":{"summary":"Returns a list of contracts.","description":"Returns a list of contracts belonging to a user (client or contractor), the list should only contain non terminated contracts.","parameters":[{"name":"profile_id","in":"header","description":"ID of profile (authenticated user)","required":true,"type":"integer","format":"int64"}],"produces":["application/json"],"responses":{"200":{"description":"success"}}}},"/jobs/unpaid":{"get":{"summary":"Get all unpaid jobs for a user.","description":"Get all unpaid jobs for a user (either a client or contractor), for active contracts only.","parameters":[{"name":"profile_id","in":"header","description":"ID of profile (authenticated user)","required":true,"type":"integer","format":"int64"}],"produces":["application/json"],"responses":{"200":{"description":"success"}}}},"/jobs/{jobId}/pay":{"post":{"summary":"Pay for a job.","description":"Pay for a job, a client can only pay if his balance >= the amount to pay. The amount should be moved from the client's balance to the contractor balance.","parameters":[{"name":"profile_id","in":"header","description":"ID of profile (authenticated user)","required":true,"type":"integer","format":"int64"},{"name":"jobId","in":"path","description":"ID of the job to be paid","required":true,"type":"integer","format":"int64"}],"produces":["application/json"],"responses":{"200":{"description":"success"},"400":{"description":"Job is already paid | Authenticated user is not the client of that Job | Not enough credit to pay for that job"},"401":{"description":"profile_id header (authenticated user) is required"},"412":{"description":"Job doesn't have client or contrator"}}}}},"definitions":{},"responses":{},"parameters":{},"securityDefinitions":{},"tags":[]}
